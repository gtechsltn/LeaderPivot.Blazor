@namespace LeaderAnalytics.LeaderPivot.Blazor
@using LeaderAnalytics.LeaderPivot 
@typeparam T
@inherits BaseComponent

<div class="@(PivotStyle.Container) leader-pivot-container">
    @if (!(Matrix?.Rows?.Any() ?? false))
    { 
        <label>NO DATA</label>
    }

    <table class="@(PivotStyle.Table) " height="1px" style="@PivotStyle.TableStyle"> @*1px height required to make control div expand to 100% height.*@
        @if (Matrix?.Rows?.Any() ?? false)
        {
            @foreach (var row in Matrix.Rows.Select((x, y) => new { Item = x, Index = y }))
            {
                <Tr>
                @foreach (var c in row.Item.Cells.Select((x, y) => new { Item = x, Index = y }))
                {
                    switch (c.Item.CellType)
                    {
                        case CellType.Measure:
                            <MeasureCell RowSpan="@c.Item.RowSpan" ColSpan="@c.Item.ColSpan" PivotStyle="@PivotStyle">@c.Item.Value</MeasureCell> break;
                        case CellType.Total:
                            <TotalCell RowSpan="@c.Item.RowSpan" ColSpan="@c.Item.ColSpan" PivotStyle="@PivotStyle">@c.Item.Value</TotalCell> break;
                        case CellType.GrandTotal:
                            <GrandTotalCell RowSpan="@c.Item.RowSpan" ColSpan="@c.Item.ColSpan" PivotStyle="@PivotStyle">@c.Item.Value</GrandTotalCell> break;
                        case CellType.GroupHeader:
                            <GroupHeaderCell IsExpanded="@c.Item.IsExpanded" NodeID="@c.Item.NodeID" CanToggleExapansion="@c.Item.CanToggleExapansion" ToggleExpansion="ToggleNodeExpansion" RowSpan="@c.Item.RowSpan" ColSpan="@c.Item.ColSpan" PivotStyle="@PivotStyle">@c.Item.Value</GroupHeaderCell> break;
                        case CellType.TotalHeader:
                            <TotalHeaderCell RowSpan="@c.Item.RowSpan" ColSpan="@c.Item.ColSpan" PivotStyle="@PivotStyle">@c.Item.Value</TotalHeaderCell> break;
                        case CellType.GrandTotalHeader:
                            <GrandTotalHeaderCell RowSpan="@c.Item.RowSpan" ColSpan="@c.Item.ColSpan" PivotStyle="@PivotStyle">@c.Item.Value</GrandTotalHeaderCell> break;
                        case CellType.MeasureTotalLabel:
                            <MeasureTotalLabelCell RowSpan="@c.Item.RowSpan" ColSpan="@c.Item.ColSpan" PivotStyle="@PivotStyle">@c.Item.Value</MeasureTotalLabelCell> break;
                        case CellType.MeasureLabel:
                            <MeasureLabelCell RowSpan="@c.Item.RowSpan" ColSpan="@c.Item.ColSpan" PivotStyle="@PivotStyle">
                                    
                                    
                                @if (row.Index == 0 && c.Index == 0)
                                {
                                    <MeasureContainer T="T"
                                        RowDimensions="RowDimensions"
                                        HiddenDimensions="HiddenDimensions"
                                        Measures="Measures"
                                        DisplayGrandTotals="DisplayGrandTotals"
                                        DisplayGrandTotalOption="DisplayGrandTotalOption"
                                        DisplayDimensionButtons="DisplayDimensionButtons"
                                        DisplayMeasureSelectors="DisplayMeasureSelectors"
                                        DisplayReloadDataButton="DisplayReloadDataButton"
                                        DisplayHiddenDimSelector="DisplayHiddenDimSelector"
                                        ReloadData="ReloadData"
                                        RenderTable="RenderTable"
                                        DimensionsChanged="DimensionsChanged"
                                        GrandTotalsCheckedChanged="GrandTotalsCheckedChanged"
                                        MaxDimensionsPerAxis="MaxDimensionsPerAxis"
                                        PivotStyle="@PivotStyle">

                                    </MeasureContainer>
                                }
                                else if (row.Index == 0 && c.Index == 1 && DisplayDimensionButtons)
                                {
                                    <div class="leader-pivot-d-flex leader-pivot-align-self-center" style="margin-top:-1vh;">
                                        <DimensionContainer T="T" 
                                            Dimensions="ColumnDimensions" 
                                            RenderTable="RenderTable" 
                                            DimensionsChanged="DimensionsChanged" 
                                            MaxDimensions="MaxDimensionsPerAxis" 
                                            IsRows="false" 
                                            PivotStyle="@PivotStyle">
                                        </DimensionContainer>  
                                    </div>
                                }
                                else
                                {
                                    @c.Item.Value;
                                }

                            </MeasureLabelCell> break;
                        default:
                            throw new Exception($"CellType {c.Item.CellType.ToString()} is not recognized.");
                    }
                }
                </Tr>
            }
        }
    </table>
</div>



